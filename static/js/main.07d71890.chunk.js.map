{"version":3,"sources":["context/actionTypes.js","context/reducer.js","hooks/useFetchJobs.js","components/JobCard.jsx","components/JobPagination.jsx","components/SearchForm.jsx","App.js","index.js"],"names":["actionTypes","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","BASE_URL","useFetchJobs","params","page","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","source","cancelToken2","fetchAPI","a","get","cancelToken","token","markdown","data","isCancel","message","length","cancel","JobCard","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobPagination","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","Container","e","param","target","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07d71890.chunk.js","sourcesContent":["export const actionTypes = {\r\n  MAKE_REQUEST: 'make-request',\r\n  GET_DATA: 'get-data',\r\n  ERROR: 'error',\r\n  UPDATE_HAS_NEXT_PAGE: 'update_has-next-page',\r\n};\r\n","import { actionTypes } from './actionTypes';\r\n\r\nexport function reducer(state, action) {\r\n  switch (action.type) {\r\n    case actionTypes.MAKE_REQUEST:\r\n      return { loading: true, jobs: [] };\r\n    case actionTypes.GET_DATA:\r\n      return { ...state, loading: false, jobs: action.payload.jobs };\r\n    case actionTypes.ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        jobs: [],\r\n      };\r\n    case actionTypes.UPDATE_HAS_NEXT_PAGE:\r\n      return { ...state, hasNextPage: action.payload.hasNextPage };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { actionTypes } from '../context/actionTypes';\r\nimport { reducer } from '../context/reducer';\r\n\r\nconst BASE_URL = `/positions.json`;\r\n\r\nconst useFetchJobs = (params, page) => {\r\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    const cancelToken1 = axios.CancelToken.source();\r\n    const cancelToken2 = axios.CancelToken.source();\r\n    dispatch({ type: actionTypes.MAKE_REQUEST });\r\n\r\n    try {\r\n      async function fetchAPI() {\r\n        const { data } = await axios.get(BASE_URL, {\r\n          cancelToken: cancelToken1.token,\r\n          params: { markdown: true, page: page, ...params },\r\n        });\r\n        dispatch({ type: actionTypes.GET_DATA, payload: { jobs: data } });\r\n      }\r\n      fetchAPI();\r\n    } catch (error) {\r\n      if (axios.isCancel(error)) return;\r\n      dispatch({ type: actionTypes.ERROR, payload: error.message });\r\n    }\r\n\r\n    try {\r\n      async function fetchAPI() {\r\n        const { data } = await axios.get(BASE_URL, {\r\n          cancelToken: cancelToken2.token,\r\n          params: { markdown: true, page: page + 1, ...params },\r\n        });\r\n        dispatch({\r\n          type: actionTypes.UPDATE_HAS_NEXT_PAGE,\r\n          payload: { hasNextPage: data.length !== 0 },\r\n        });\r\n      }\r\n      fetchAPI();\r\n    } catch (error) {\r\n      if (axios.isCancel(error)) return;\r\n      dispatch({ type: actionTypes.ERROR, payload: error.message });\r\n    }\r\n\r\n    return () => {\r\n      cancelToken1.cancel();\r\n      cancelToken2.cancel();\r\n    };\r\n  }, [params, page]);\r\n  return state;\r\n};\r\n\r\nexport default useFetchJobs;\r\n","import React, { useState } from 'react';\r\nimport { Badge, Button, Card, Collapse } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nfunction JobCard({ job }) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Card className='mb-3'>\r\n      <Card.Body>\r\n        <div className='d-flex justify-content-between'>\r\n          <div>\r\n            <Card.Title>\r\n              {job.title} -{' '}\r\n              <span className='text-muted font-weight-light'>\r\n                {job.company}\r\n              </span>\r\n            </Card.Title>\r\n            <Card.Subtitle>\r\n              {new Date(job.created_at).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant='secondary' className='mr-2'>\r\n              {job.type}\r\n            </Badge>\r\n            <Badge variant='info'>{job.location}</Badge>\r\n            <div style={{ wordBreak: 'break-all' }}>\r\n              <ReactMarkdown source={job.how_to_apply} />\r\n            </div>\r\n          </div>\r\n          <img\r\n            className='d-sm-none d-md-block'\r\n            height='50'\r\n            alt={`${job.company}'s Logo`}\r\n            src={job.company_logo}\r\n          />\r\n        </div>\r\n        <Card.Text>\r\n          <Button\r\n            variant='primary'\r\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n          >\r\n            {open ? 'Hide Details' : 'View Details'}\r\n          </Button>\r\n        </Card.Text>\r\n        <Collapse in={open}>\r\n          <div className='mt-4'>\r\n            <ReactMarkdown source={job.description} />\r\n          </div>\r\n        </Collapse>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default JobCard;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nfunction JobPagination({ page, setPage, hasNextPage }) {\r\n  function adjustPage(amount) {\r\n    setPage((prevPage) => prevPage + amount);\r\n  }\r\n\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && (\r\n        <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\r\n      )}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && (\r\n        <Pagination.Item onClick={() => adjustPage(-1)}>\r\n          {page - 1}\r\n        </Pagination.Item>\r\n      )}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && (\r\n        <Pagination.Item onClick={() => adjustPage(1)}>\r\n          {page + 1}\r\n        </Pagination.Item>\r\n      )}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  );\r\n}\r\n\r\nexport default JobPagination;\r\n","import React from 'react';\r\nimport { Form, Col } from 'react-bootstrap';\r\n\r\nfunction SearchForm({ params, onParamChange }) {\r\n  return (\r\n    <Form className='mb-4'>\r\n      <Form.Row className='align-items-end'>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.description}\r\n            name='description'\r\n            type='text'\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.location}\r\n            name='location'\r\n            type='text'\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} xs='auto' className='ml-2'>\r\n          <Form.Check\r\n            onChange={onParamChange}\r\n            value={params.full_time}\r\n            name='full_time'\r\n            id='full-time'\r\n            label='Full Time Jobs'\r\n            type='checkbox'\r\n            className='mb-2'\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport useFetchJobs from './hooks/useFetchJobs';\nimport JobCard from './components/JobCard';\nimport JobPagination from './components/JobPagination';\nimport SearchForm from './components/SearchForm';\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  function handleParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1);\n    setParams((params) => {\n      return { ...params, [param]: value };\n    });\n  }\n\n  return (\n    <Container className='my-4'>\n      <h1 className='mb-4'>IT Jobs - Powered By Github</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error...</h1>}\n      {jobs.map((job) => (\n        <JobCard key={job.id} job={job} />\n      ))}\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}